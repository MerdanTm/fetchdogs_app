{"version":3,"sources":["reducers/dogReducer.js","ReducerComp.js","reducers/myPeopleReducer.js","People.js","App.js","reportWebVitals.js","index.js"],"names":["dogReducer","state","action","type","data","loading","error","payload","myInitialState","ReducerComp","useReducer","myReducer","dispatch","console","log","onClick","fetch","then","res","json","result","message","catch","disabled","src","alt","myPeopleReducer","map","person","name","alive","peopleArray","People","idx","style","display","width","justifyContent","App","inputRef","useRef","divRef","btn1Ref","useEffect","ref","className","placeholder","current","focus","border","alert","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8d9a66b.chunk.js","sourcesContent":["export const dogReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_START\":\r\n      return { ...state, data: \"\", loading: true, error: \"\" };\r\n    case \"FETCH_SUCCESS\":\r\n      return { ...state, data: action.payload, loading: false };\r\n    case \"FETCH_ERROR\":\r\n      return { ...state, error: action.payload, loading: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useState, useReducer } from \"react\";\r\nimport { dogReducer as myReducer } from \"./reducers/dogReducer\";\r\n\r\nconst myInitialState = { data: \"\", loading: \"\", error: \"\" };\r\n\r\nfunction ReducerComp() {\r\n  /*const [data,setData]=useState(\"\")\r\n    const [loading,setLoad] = useState(false)\r\n    const [error,setError] = useState(\"\")*/\r\n  const [state, dispatch] = useReducer(myReducer, myInitialState);\r\n\r\n  const fetchingDog = () => {\r\n    /*setLoad(true)\r\n        setData(\"\")\r\n        setError(\"\")*/\r\n    dispatch({ type: \"FETCH_START\" });\r\n    fetch(\"https://dog.ceo/api/breeds/image/random\")\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        /*setLoad(false)\r\n                                setData(result.message)*/\r\n        dispatch({ type: \"FETCH_SUCCESS\", payload: result.message });\r\n      })\r\n      .catch(() => {\r\n        /*setLoad(false);setError(\"Error fetching data.\")*/\r\n        dispatch({ type: \"FETCH_ERROR\", payload: \"Error fetching data.\" });\r\n      });\r\n  };\r\n  console.log(state);\r\n  return (\r\n    <div>\r\n      <hr />\r\n      <button onClick={fetchingDog} disabled={state.loading}>\r\n        Fetch Dog\r\n      </button>\r\n      {state.loading && <p>Loading ...</p>}\r\n      {state.data && (\r\n        <div>\r\n          {\" \"}\r\n          <img src={state.data} alt=\"Random Dog\" />\r\n        </div>\r\n      )}\r\n      {state.error && <p>{state.error}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReducerComp;\r\n","export const myPeopleReducer = (state, action) => {\r\n  if (action.type == \"chomp\") {\r\n    return state.map((person) => {\r\n      if (person.name == action.payload) {\r\n        person.alive = false;\r\n      }\r\n      return person;\r\n    });\r\n  }\r\n  if (action.type == \"revive\") {\r\n    return state.map((person) => {\r\n      if (person.name == action.payload) {\r\n        person.alive = true;\r\n      }\r\n      return person;\r\n    });\r\n  }\r\n};\r\n","import React, { useReducer } from \"react\";\r\nimport { myPeopleReducer } from \"./reducers/myPeopleReducer\";\r\n\r\nconst peopleArray = [\r\n  { name: \"Jay\", alive: true },\r\n  { name: \"Kailee\", alive: true },\r\n  { name: \"John\", alive: true },\r\n  { name: \"Mia\", alive: true },\r\n];\r\nfunction People() {\r\n  const [state, dispatch] = useReducer(myPeopleReducer, peopleArray);\r\n\r\n  function devour(name) {\r\n    dispatch({ type: \"chomp\", payload: name });\r\n  }\r\n  function spitOut(name) {\r\n    dispatch({ type: \"revive\", payload: name });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>People List</h1>\r\n      {state.map((person, idx) => (\r\n        <div\r\n          key={idx}\r\n          style={{\r\n            display: \"flex\",\r\n            width: \"50%\",\r\n            justifyContent: \"space-around\",\r\n          }}\r\n        >\r\n          <div>{person.name}</div>\r\n          {person.alive ? (\r\n            <div>\r\n              {\" \"}\r\n              ‚ú®‚ú® ALIVE! ‚ú®‚ú®{\" \"}\r\n              <button onClick={() => devour(person.name)}>\r\n                {\" \"}\r\n                üêä DEVOUR üêä{\" \"}\r\n              </button>{\" \"}\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              {\" \"}\r\n              ‚ò† ‚ò† DEAD ‚ò† ‚ò†{\" \"}\r\n              <button onClick={() => spitOut(person.name)}>\r\n                {\" \"}\r\n                ü•µ SPIT OUT ü•µ{\" \"}\r\n              </button>{\" \"}\r\n            </div>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default People;\r\n","import \"./App.css\";\nimport React, { useRef, useEffect } from \"react\";\nimport ReducerComp from \"./ReducerComp\";\nimport People from \"./People\";\nfunction App() {\n  const inputRef = useRef();\n  const divRef = useRef();\n  const btn1Ref = useRef();\n  const data = useRef(178);\n\n  const onFocusBtn = () => {\n    inputRef.current.focus();\n  };\n  const onDivBorderBtn = () => {\n    divRef.current.style.border = \"1px solid red\";\n  };\n  const onViewInputValueBtn = () => {\n    alert(inputRef.current.value);\n  };\n  //ComponentDidMount (useEffect(() =>{})) -------> Once When Create\n  useEffect(() => {\n    /*console.log(\"inputRef->\",inputRef);\n  console.log(\"inputRef.current->\",inputRef.current);\n  console.log(\"divRef->\",divRef);\n  console.log(\"divRef.current->\",divRef.current);\n  console.log(\"btn1Ref->\",btn1Ref);\n  console.log(\"btn1Ref.current->\",btn1Ref.current);\n  console.log(\"data->\",data);*/\n  });\n\n  return (\n    <div ref={divRef} className=\"App\">\n      <h1>Welcome!</h1>\n      <input ref={inputRef} placeholder=\"Enter text...\"></input>\n      <button onClick={onFocusBtn}>Focus Button</button>\n      <button onClick={onDivBorderBtn}>Div Border Button</button>\n      <button ref={btn1Ref} onClick={onViewInputValueBtn}>\n        View Input Value Button\n      </button>\n      <br />\n      <ReducerComp />\n      <hr />\n      <People />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}